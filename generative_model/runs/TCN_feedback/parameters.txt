DATE: 20240926-165043

-----------------DATASET------------------
DATASET_PATH: /home/marco_bortolotti/project_official/Affective-AI-Music-Improviser/generative_model/dataset
TRAIN_SET_SIZE: 14460
EVAL_SET_SIZE: 225
TEST_SET_SIZE: 96

-----------------MODEL------------------
MODEL SIZE: <bound method TCN.size of TCN(
  (encoder): Embedding(17324, 512)
  (tcn): TemporalConvNet(
    (network): Sequential(
      (0): TemporalBlock(
        (conv1): Conv1d(512, 128, kernel_size=(3,), stride=(1,), padding=(2,))
        (chomp1): Chomp1d()
        (relu1): ReLU()
        (dropout1): Dropout(p=0.45, inplace=False)
        (conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(2,))
        (chomp2): Chomp1d()
        (relu2): ReLU()
        (dropout2): Dropout(p=0.45, inplace=False)
        (net): Sequential(
          (0): Conv1d(512, 128, kernel_size=(3,), stride=(1,), padding=(2,))
          (1): Chomp1d()
          (2): ReLU()
          (3): Dropout(p=0.45, inplace=False)
          (4): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(2,))
          (5): Chomp1d()
          (6): ReLU()
          (7): Dropout(p=0.45, inplace=False)
        )
        (downsample): Conv1d(512, 128, kernel_size=(1,), stride=(1,))
        (relu): ReLU()
      )
      (1): TemporalBlock(
        (conv1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(2,))
        (chomp1): Chomp1d()
        (relu1): ReLU()
        (dropout1): Dropout(p=0.45, inplace=False)
        (conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(2,))
        (chomp2): Chomp1d()
        (relu2): ReLU()
        (dropout2): Dropout(p=0.45, inplace=False)
        (net): Sequential(
          (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(2,))
          (1): Chomp1d()
          (2): ReLU()
          (3): Dropout(p=0.45, inplace=False)
          (4): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(2,))
          (5): Chomp1d()
          (6): ReLU()
          (7): Dropout(p=0.45, inplace=False)
        )
        (relu): ReLU()
      )
      (2): TemporalBlock(
        (conv1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(4,))
        (chomp1): Chomp1d()
        (relu1): ReLU()
        (dropout1): Dropout(p=0.45, inplace=False)
        (conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(4,))
        (chomp2): Chomp1d()
        (relu2): ReLU()
        (dropout2): Dropout(p=0.45, inplace=False)
        (net): Sequential(
          (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(4,))
          (1): Chomp1d()
          (2): ReLU()
          (3): Dropout(p=0.45, inplace=False)
          (4): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(4,))
          (5): Chomp1d()
          (6): ReLU()
          (7): Dropout(p=0.45, inplace=False)
        )
        (relu): ReLU()
      )
      (3): TemporalBlock(
        (conv1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(8,))
        (chomp1): Chomp1d()
        (relu1): ReLU()
        (dropout1): Dropout(p=0.45, inplace=False)
        (conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(8,))
        (chomp2): Chomp1d()
        (relu2): ReLU()
        (dropout2): Dropout(p=0.45, inplace=False)
        (net): Sequential(
          (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(8,))
          (1): Chomp1d()
          (2): ReLU()
          (3): Dropout(p=0.45, inplace=False)
          (4): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(8,))
          (5): Chomp1d()
          (6): ReLU()
          (7): Dropout(p=0.45, inplace=False)
        )
        (relu): ReLU()
      )
      (4): TemporalBlock(
        (conv1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(16,))
        (chomp1): Chomp1d()
        (relu1): ReLU()
        (dropout1): Dropout(p=0.45, inplace=False)
        (conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(16,))
        (chomp2): Chomp1d()
        (relu2): ReLU()
        (dropout2): Dropout(p=0.45, inplace=False)
        (net): Sequential(
          (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(16,))
          (1): Chomp1d()
          (2): ReLU()
          (3): Dropout(p=0.45, inplace=False)
          (4): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(32,), dilation=(16,))
          (5): Chomp1d()
          (6): ReLU()
          (7): Dropout(p=0.45, inplace=False)
        )
        (relu): ReLU()
      )
      (5): TemporalBlock(
        (conv1): Conv1d(128, 512, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(32,))
        (chomp1): Chomp1d()
        (relu1): ReLU()
        (dropout1): Dropout(p=0.45, inplace=False)
        (conv2): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(32,))
        (chomp2): Chomp1d()
        (relu2): ReLU()
        (dropout2): Dropout(p=0.45, inplace=False)
        (net): Sequential(
          (0): Conv1d(128, 512, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(32,))
          (1): Chomp1d()
          (2): ReLU()
          (3): Dropout(p=0.45, inplace=False)
          (4): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(64,), dilation=(32,))
          (5): Chomp1d()
          (6): ReLU()
          (7): Dropout(p=0.45, inplace=False)
        )
        (downsample): Conv1d(128, 512, kernel_size=(1,), stride=(1,))
        (relu): ReLU()
      )
    )
  )
  (decoder): Linear(in_features=512, out_features=16447, bias=True)
  (drop): Dropout(p=0.25, inplace=False)
)>
----------OPTIMIZATION PARAMETERS----------
GRADIENT_CLIP: 0.35
FEEDBACK: True
EMPHASIZE_EEG: False
LR_SCHEDULER: True
DATA AUGMENTATION: True
EARLY STOP EPOCHS: 15
USE_EEG: True
ENTROPY_WEIGHT: 1.0
PENALTY_WEIGHT: 3.0
LEARNING_RATE: 0.002
BATCH_SIZE: 64
EPOCHS: 1000

------------TOKENIZATION PARAMETERS--------------
TICKS_PER_BEAT: 4
TOKENS_FREQUENCY_THRESHOLD: None
SILENCE_TOKEN_WEIGHT: 0.01
